[matrix,affine,point3d,point2d,Face,Draw3D]=(function(){function Camera(width,height,fov,pos,facing){let cam={fov:0,width:width,height:height,tfm:null,planes:null,vp:null,pos:null,project(pt){let pvec=this.tfm.mul(pt.vec());let ff=1/pvec.data[2][0];return point2d(this.width*.5*(1+this.fov*ff*pvec.data[0][0]),this.height*.5*(1+ff*pvec.data[1][0]));},setfov(fov){this.fov=Math.tan(fov*.5);if(this.tfm)this.update_geometry();},setvp(pos,facing){let v2=facing.vec();let trlate=affine.shift(-pos.x,-pos.y,-pos.z);this.tfm=trlate;v2=trlate.mul(v2);this.v2=v2;let ay=-getangle(v2.data[2][0],v2.data[0][0]);let ry=affine.roty(ay);v2=ry.mul(v2);this.tfm=ry.mul(this.tfm);let ax=getangle(v2.data[2][0],v2.data[1][0]);let rx=affine.rotx(ax);v2=rx.mul(v2);this.tfm=rx.mul(this.tfm);this.update_geometry();},update_geometry(){let tfminv=this.tfm.inv();this.pos=point3d.from(tfminv.mul(matrix([[0],[0],[0],[1]])));this.vp=point3d.from(tfminv.mul(matrix([[0],[0],[1],[1]])));let corners=[];for(let i=-1;i<=1;i+=2){for(let j=-1;j<=1;j+=2){corners.push(point3d.from(tfminv.mul(matrix([[i*this.fov],[i*j],[1],[1]]))));}}this.planes=[];for(let i=0;i<4;i++){this.planes.push(Plane(this.pos,corners[i],corners[(i+1)%4]));}}};cam.setfov(fov||Math.PI);cam.setvp(pos||point3d(0,0,0),facing||point3d(0,0,1));return cam;};function _splitface_intersect(p1,p2,plane1,plane2,plane3){let matr=matrix.merge_rows(plane1.matr,plane2.matr,plane3.matr,matrix([[0,0,0,1]]));let rvec=matrix([[0],[0],[0],[1]]);let ptvec;try{ptvec=matr.inv().mul(rvec);}catch(e){return null;}let pt=point3d.from(ptvec);if(pt.x>Math.max(p1.x,p2.x)+.01||pt.x<Math.min(p1.x,p2.x)-.01||pt.y>Math.max(p1.y,p2.y)+.01||pt.y<Math.min(p1.y,p2.y)-.01||pt.z>Math.max(p1.z,p2.z)+.01||pt.z<Math.min(p1.z,p2.z)-.01)return null;return pt;};function texture_coords(pt,p1,p2,t1,t2){let f3=0;if(p1.x!=p2.x)f3=(pt.x-p1.x)/(p2.x-p1.x);else if(p1.y!=p2.y)f3=(pt.y-p1.y)/(p2.y-p1.y);else if(p1.z!=p2.z)f3=(pt.z-p1.z)/(p2.z-p1.z);return point2d(t1.x+(t2.x-t1.x)*f3,t1.y+(t2.y-t1.y)*f3);};function splitface(face,plane){let fplane=face.plane;let ip=independent_point(face.p1,face.p2,face.p3);let p12,p23,p31;try{p12=_splitface_intersect(face.p1,face.p2,plane,fplane,Plane(face.p1,face.p2,ip));p23=_splitface_intersect(face.p2,face.p3,plane,fplane,Plane(face.p2,face.p3,ip));p31=_splitface_intersect(face.p3,face.p1,plane,fplane,Plane(face.p3,face.p1,ip));}catch(e){return [face];}if(p31!==null&&p12!==null){let t31=texture_coords(p31,face.p3,face.p1,face.t3,face.t1);let t12=texture_coords(p12,face.p1,face.p2,face.t1,face.t2);return [Face(face.img,face.p1,p12,p31,face.t1,t12,t31,face.plane),Face(face.img,face.p2,p12,p31,face.t2,t12,t31,face.plane),Face(face.img,face.p2,face.p3,p31,face.t2,face.t3,t31,face.plane)];}else if(p12!==null&&p23!==null){let t12=texture_coords(p12,face.p1,face.p2,face.t1,face.t2);let t23=texture_coords(p23,face.p2,face.p3,face.t2,face.t3);return [Face(face.img,face.p2,p12,p23,face.t2,t12,t23,face.plane),Face(face.img,face.p1,p23,p12,face.t1,t23,t12,face.plane),Face(face.img,face.p1,face.p3,p23,face.t1,face.t3,t23,face.plane)];}else if(p23!==null&&p31!==null){let t23=texture_coords(p23,face.p2,face.p3,face.t2,face.t3);let t31=texture_coords(p31,face.p3,face.p1,face.t3,face.t1);return [Face(face.img,face.p3,p23,p31,face.t3,t23,t31,face.plane),Face(face.img,face.p1,p31,p23,face.t1,t31,t23,face.plane),Face(face.img,face.p1,face.p2,p23,face.t1,face.t2,t23,face.plane)];}else if(p12!==null){let t12=texture_coords(p12,face.p1,face.p2,face.t1,face.t2);return [Face(face.img,face.p1,face.p3,p12,face.t1,face.t3,t12,face.plane),Face(face.img,face.p3,face.p2,p12,face.t3,face.t2,t12,face.plane)];}else if(p23!==null){let t23=texture_coords(p23,face.p2,face.p3,face.t2,face.t3);return [Face(face.img,face.p1,face.p3,p23,face.t1,face.t3,t23,face.plane),Face(face.img,face.p1,face.p2,p23,face.t1,face.t2,t23,face.plane)];}else if(p31!==null){let t31=texture_coords(p31,face.p3,face.p1,face.t3,face.t1);return [Face(face.img,face.p1,face.p2,p31,face.t1,face.t2,t31,face.plane),Face(face.img,face.p2,face.p3,p31,face.t2,face.t3,t31,face.plane)];}else return [face];};function Face(img,p1,p2,p3,t1,t2,t3,pln){return {p1,p2,p3,img,t1,t2,t3,plane:pln||Plane(p1,p2,p3)};};function pavg(p1,p2){if(p1.z!==undefined){return point3d(.5*(p1.x+p2.x),.5*(p1.y+p2.y),.5*(p1.z+p2.z));}else {return point2d(.5*(p1.x+p2.x),.5*(p1.y+p2.y));}};function dist3(p1,p2){return (p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y)+(p1.z-p2.z)*(p1.z-p2.z);};function dist2(p1,p2){return (p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y);};function sort3d(faces,cpos){if(faces.length<=1)return faces;let pvi=Math.floor(Math.random()*faces.length);let pivot=faces[pvi];let faces1=[];let faces2=[];let facesm=[pivot];let pln=pivot.plane;let ppvp=pln.point(cpos);for(let i=0;i<faces.length;i++){if(i==pvi)continue;if(faces[i].plane.matr.eq(pln.matr)){facesm.push(faces[i]);continue;}let spfs=splitface(faces[i],pln);for(let j=0;j<spfs.length;j++){if((pln.point(spfs[j].p1)+pln.point(spfs[j].p2)+pln.point(spfs[j].p3))*ppvp>=0)faces2.push(spfs[j]);else {faces1.push(spfs[j]);}}}return [...sort3d(faces1,cpos),...facesm,...sort3d(faces2,cpos)];};function ptexpand(midp,pt){let pt2=point2d(pt.x,pt.y);if(pt2.x<midp.x)pt2.x-=2;if(pt2.x>midp.x)pt2.x+=2;if(pt2.y<midp.y)pt2.y-=2;if(pt2.y>midp.y)pt2.y+=2;if(pt2.z<midp.z)pt2.z-=2;if(pt2.z>midp.z)pt2.z+=2;return pt2;};function Draw3D(canv,ffov){let ctx=canv.getContext('2d');ctx.imageSmoothingEnabled=false;ffov=ffov||.5*Math.PI;return {width:canv.width,height:canv.height,pixacc:2000,ctx:ctx,camera:Camera(canv.width,canv.height,ffov),lineardraw(face){let p1=this.camera.project(face.p1);let p2=this.camera.project(face.p2);let p3=this.camera.project(face.p3);try{let matr=interpolate(face.t1,face.t2,face.t3,p1.vec(),p2.vec(),p3.vec());this.ctx.save();this.ctx.beginPath();this.ctx.moveTo(p1.x,p1.y);this.ctx.lineTo(p2.x,p2.y);this.ctx.lineTo(p3.x,p3.y);this.ctx.closePath();this.ctx.clip();this.ctx.transform(matr.data[0][0],matr.data[1][0],matr.data[0][1],matr.data[1][1],matr.data[0][2],matr.data[1][2]);this.ctx.drawImage(face.img,0,0);this.ctx.restore();}catch(err){}},cdraw(face){let p1=this.camera.project(face.p1);let p2=this.camera.project(face.p2);let p3=this.camera.project(face.p3);this.ctx.fillStyle=face.img;this.ctx.save();this.ctx.beginPath();this.ctx.moveTo(p1.x,p1.y);this.ctx.lineTo(p2.x,p2.y);this.ctx.lineTo(p3.x,p3.y);this.ctx.closePath();this.ctx.fill();},idraw(face,p1,p2,p3){p1=p1||this.camera.project(face.p1);p2=p2||this.camera.project(face.p2);p3=p3||this.camera.project(face.p3);let P=Math.abs(p1.x*(p2.y-p3.y)+p2.x*(p3.y-p1.y)+p3.x*(p1.y-p2.y))*.95+.05*Math.max(dist2(p1,p2),dist2(p2,p3),dist2(p3,p1));if(P<=this.pixacc)this.lineardraw(face);else {let p12=pavg(face.p1,face.p2);let p23=pavg(face.p2,face.p3);let p31=pavg(face.p3,face.p1);let t12=pavg(face.t1,face.t2);let t23=pavg(face.t2,face.t3);let t31=pavg(face.t3,face.t1);this.idraw(Face(face.img,face.p1,p12,p31,face.t1,t12,t31,face.plane),p1);this.idraw(Face(face.img,face.p2,p23,p12,face.t2,t23,t12,face.plane),p2);this.idraw(Face(face.img,face.p3,p23,p31,face.t3,t23,t31,face.plane),p3);this.idraw(Face(face.img,p12,p23,p31,t12,t23,t31,face.plane));}},fdraw(face){let faces=[face];let faces2=[];for(let i=0;i<this.camera.planes.length;i++){let pln=this.camera.planes[i];let ppvp=pln.point(this.camera.vp);while(faces.length){let fface=faces.pop();let ffaces=splitface(fface,pln);for(let j=0;j<ffaces.length;j++){if((pln.point(ffaces[j].p1)+pln.point(ffaces[j].p2)+pln.point(ffaces[j].p3))*ppvp>0)faces2.push(ffaces[j]);}}while(faces2.length){faces.push(faces2.pop());}}for(let i=0;i<faces.length;i++){if(typeof faces[i].img=='string')this.cdraw(faces[i]);else this.idraw(faces[i]);}},clear(){this.ctx.clearRect(0,0,this.width,this.height);},drawScene(faces){let faces2=sort3d(faces,this.camera.pos);for(let i=0;i<faces2.length;i++)this.fdraw(faces2[i]);}};};const affine={rotx(alfa){let s=Math.sin(alfa);let c=Math.cos(alfa);return matrix([[1,0,0,0],[0,c,-s,0],[0,s,c,0],[0,0,0,1]]);},roty(alfa){let s=Math.sin(alfa);let c=Math.cos(alfa);return matrix([[c,0,s,0],[0,1,0,0],[-s,0,c,0],[0,0,0,1]]);},rotz(alfa){let s=Math.sin(alfa);let c=Math.cos(alfa);return matrix([[c,-s,0,0],[s,c,0,0],[0,0,1,0],[0,0,0,1]]);},shift(x,y,z){return matrix([[1,0,0,x],[0,1,0,y],[0,0,1,z],[0,0,0,1]]);}};function point3d(x,y,z){return {x,y,z,vec(){return matrix([[this.x],[this.y],[this.z],[1]]);}};}point3d.from=function(vec){return point3d(vec.data[0][0],vec.data[1][0],vec.data[2][0]);};function point2d(x,y){return {x,y,vec(){return matrix([[this.x],[this.y],[1]]);}};};point2d.from=function(vec){return point2d(vec.data[0][0],vec.data[1][0]);};function getangle(cos,sin){if(cos==0&&sin==0)return 0;let hipo=Math.sqrt(sin*sin+cos*cos);sin/=hipo;cos/=hipo;let a=Math.acos(cos);if(sin<0)a=2*Math.PI-a;return a;};function interpolate(p1,p2,p3,v1,v2,v3){let m1=matrix.merge_cols(p1.vec(),p2.vec(),p3.vec());let m2=matrix.merge_cols(v1,v2,v3);return m2.mul(m1.inv());};function independent_point(a,b,c){let matr=matrix([[a.x,b.x,c.x],[a.y,b.y,c.y],[1,1,1]]);let invv;try{invv=matr.inv();}catch(e){if(a.x==b.x)return point3d(a.x+1,a.y,a.z);else return point3d(a.x,a.y+1,a.z);}let mm=matrix([[a.z,b.z,c.z]]).mul(invv);let zz=mm.mul(matrix([[a.x],[a.y],[1]])).data[0][0]+5;return point3d(a.x,a.y,zz);};function Plane(p1,p2,p3){let p4=independent_point(p1,p2,p3);let mpts=matrix.merge_cols(p1.vec(),p2.vec(),p3.vec(),p4.vec());let rvec=matrix([[0,0,0,1]]);let pmatr=rvec.mul(mpts.inv());return {matr:pmatr,point(pt){return this.matr.mul(pt.vec()).data[0][0];}}};function matrix(arg1,arg2){let arr,rows,cols;if(typeof arg1=='number'&&typeof arg2=='number'){arr=[];for(let i=0;i<arg1;i++){arr.push([]);for(let j=0;j<arg2;j++){arr[i].push(0);}}rows=arg1,cols=arg2;}else if(typeof arg1=='object'){arr=arg1;rows=arr.length,cols=(arr[0]?arr[0].length:0);}else throw Error(`Invalid arguments to create a matrix!`);return {data:arr,rows:rows,cols:cols,copy(){let cpy=matrix(this.rows,this.cols);for(let i=0;i<this.rows;i++){for(let j=0;j<this.cols;j++){cpy.data[i][j]=this.data[i][j];}}return cpy;},mul(matr){if(this.cols!=matr.rows)throw Error('Matrices incompatible for multiplication.');let resm=matrix(this.rows,matr.cols);for(let i=0;i<this.rows;i++){for(let j=0;j<matr.cols;j++){resm.data[i][j]=0;for(let k=0;k<this.cols;k++){resm.data[i][j]+=this.data[i][k]*matr.data[k][j];}}}return resm;},getcfactor(dest,p,q,n){let i=0,j=0;for(let r=0;r<n;r++){for(let c=0;c<n;c++){if(r!=p&&c!=q){dest.data[i][j++]=this.data[r][c];if(j==n-1){j=0;i++;}}}}},det(){let n=this.rows;let D=0;if(n==1)return this.data[0][0];let t=matrix(n-1,n-1);let s=1;for(let f=0;f<n;f++){this.getcfactor(t,0,f,n);D+=s*this.data[0][f]*t.det();s=-s;}return D;},adj(){if(this.rows==1)return matrix([[1]]);let adjm=matrix(this.rows,this.cols);let s=1;let t=matrix(this.rows-1,this.cols-1);for(let i=0;i<this.rows;i++){for(let j=0;j<this.cols;j++){this.getcfactor(t,i,j,this.rows);s=((i+j)%2==0)?1:-1;adjm.data[j][i]=s*t.det();}}return adjm;},inv(){let det=this.det(this.rows);if(det==0)throw Error('Matrix has no inverse!');let adjm=this.adj();for(let i=0;i<this.rows;i++){for(let j=0;j<this.cols;j++){adjm.data[i][j]/=det;}}return adjm;},eq(m2){if(this.rows!=m2.rows||this.cols!=m2.cols)return false;for(let i=0;i<this.rows;i++){for(let j=0;j<this.cols;j++){if(this.data[i][j]!=m2.data[i][j])return false;}}return true;}}};matrix.identity=function(x){let mm=matrix(x,x);for(let i=0;i<x;i++)mm.data[i][i]=1;return mm;};matrix.merge_cols=function(...args){let matr=matrix(args[0].rows,args.length);for(let i=0;i<matr.rows;i++){for(let j=0;j<matr.cols;j++){matr.data[i][j]=args[j].data[i][0];}}return matr;};matrix.merge_rows=function(...args){let mmm=[];for(let i=0;i<args.length;i++){mmm.push(args[i].data[0]);}return matrix(mmm);};return [matrix,affine,point3d,point2d,Face,Draw3D];})()